services:
  redis:
    image: redis:8
    restart: unless-stopped

  db:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    depends_on:
      - db
      - redis
    env_file:
      - .env
    volumes:
      - '${MEDIA_UPLOAD_DIR}:${MEDIA_UPLOAD_DIR}'

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - backend

  ingress:
    build:
      context: apps/ingress
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    env_file:
      - .env
    ports:
      - '443:443'
      - "80:80"
    volumes:
      - ${MEDIA_UPLOAD_DIR}:/var/www
      - certbot-etc:/etc/letsencrypt
      - certbot-webroot:/var/www/html

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-webroot:/var/www/html
    entrypoint: /bin/sh
    command: -c "sleep infinity"
    env_file:
      - .env
      
volumes:
  postgres_data:
    external: true
  certbot-etc:
  certbot-webroot: