services:
  redis:
    image: redis:8
    restart: always
    volumes:
      - redis-data:/data

  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    volumes:
      - ${POSTGRES_DATADIR}:/var/lib/postgresql/data

  listmonk-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: listmonk
      POSTGRES_USER: listmonk
      POSTGRES_PASSWORD: ${LISTMONK_DB_PASSWORD}
    volumes:
      - listmonk-db-data:/var/lib/postgresql/data

  listmonk:
    image: listmonk/listmonk:latest
    restart: always
    depends_on:
      - listmonk-db
    environment:
      LISTMONK_config__db__host: listmonk-db
      LISTMONK_config__db__port: 5432
      LISTMONK_config__db__user: listmonk
      LISTMONK_config__db__password: ${LISTMONK_DB_PASSWORD}
      LISTMONK_config__db__database: listmonk
      LISTMONK_config__db__ssl_mode: disable
      LISTMONK_admin_username: ${LISTMONK_USERNAME}
      LISTMONK_admin_password: ${LISTMONK_PASSWORD}
    volumes:
      - listmonk-data:/listmonk
    ports:
      - "9000:9000"

  backend:
    image: ghcr.io/opencupid/opencupid-backend
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    depends_on:
      - db
      - redis
      - listmonk
    env_file:
      - .env
    volumes:
      - '${MEDIA_UPLOAD_DIR}:${MEDIA_UPLOAD_DIR}'
      - '${PWD}/secrets:/secrets'

  frontend:
    image: ghcr.io/opencupid/opencupid-frontend
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - backend

  ingress:
    image: ghcr.io/opencupid/opencupid-ingress
    build:
      context: apps/ingress
    restart: always
    depends_on:
      - frontend
      - backend
    env_file:
      - .env
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - ${MEDIA_UPLOAD_DIR}:/var/www
      - ${CERTBOT_ETCDIR}:/etc/letsencrypt
      - certbot-webroot:/var/www/html

  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - ${CERTBOT_ETCDIR}:/etc/letsencrypt
      - certbot-webroot:/var/www/html
    entrypoint: /bin/sh
    command: -c "sleep infinity"
    env_file:
      - .env

  # this obtains the initial cert from letsencrypt. Should be run once manually.
  certbot-init:
    image: certbot/certbot
    restart: "no" # don't auto start this

    # enable this before running certbot-init, and disable after so that ingress can use port 80
#    ports:
#      - "80:80"
    volumes:
      - ${CERTBOT_ETCDIR}:/etc/letsencrypt
      - certbot-webroot:/var/www/html
    env_file:
      - .env
    entrypoint: certbot
    command:
      - certonly
      - --webroot
      - -w
      - /var/www/html
      - -d
      - ${DOMAIN}
      - -d
      - ${DOMAIN}
      - --email
      - ${EMAIL}
      - --agree-tos
      - --no-eff-email
      - --standalone

volumes:
  redis-data:
    driver: local
  listmonk-db-data:
    driver: local
  listmonk-data:
    driver: local
  certbot-webroot:
