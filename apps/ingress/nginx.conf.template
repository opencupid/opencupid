worker_processes 1;
env AUTH_IMG_HMAC_SECRET;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;

  sendfile on;
  keepalive_timeout 65;

  # --- Enable Gzip ---
  gzip on;
  gzip_comp_level 6;
  gzip_min_length 256;
  gzip_vary on;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript font/woff2;

  # --- Upstreams ---
  upstream backend {
    server backend:3000;
  }

  upstream frontend {
    server frontend:3001;
  }

  # --- HTTP -> HTTPS Redirect ---
  server {
    listen 80;
    server_name _;

    location /.well-known/acme-challenge/ {
      root /var/www/html;
      try_files $uri =404;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # --- HTTPS Server ---
  server {
    listen 443 ssl;
    server_name _;

    ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

      # Default limit for everything else (1MB by default, or set explicitly)
    client_max_body_size 1M;

    # Restrict override only for image upload route
    location /api/image {
      client_max_body_size 20M;

      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  
    location /api/ {
      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
      if ($request_method = OPTIONS) {
        return 204;
      }
    }

    location /ws/ {
      proxy_pass http://backend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_read_timeout 3600;
      proxy_send_timeout 3600;

      add_header 'Access-Control-Allow-Origin' '*' always;
    }

    location /images/ {
      access_by_lua_file /etc/nginx/image_auth.lua;
      alias /var/www/;
      autoindex off;
      try_files $uri =404;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    location /.well-known/acme-challenge/ {
      root /var/www/html;
    }

    location / {
      proxy_pass http://frontend/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}
